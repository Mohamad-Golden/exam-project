[
    {
        "id":1,
        "question": "a = [1, 2, 3, None, (), [],]</br>print len(a)",
        "choices":[
            "syntax error",
            "4",
            "5",
            "6",
            "7"
        ],
        "answer":4
    },
    {
        "id":2,
        "question": "d = lambda p: p * 2\nt = lambda p: p * 3\nx = 2\nx = d(x)\nx = t(x)\nx = d(x)\nprint x",
        "choices":[
            "7",
            "12",
            "24",
            "36",
            "48"
        ],
        "answer":3
    },
    {
        "id":3,
        "question": "nums = set([1, 1, 2, 3, 3, 3, 4])\nprint len(nums)",
        "choices":[
            "1",
            "2",
            "4",
            "5",
            "7"
        ],
        "answer":3
    },
    {
        "id":4,
        "question": "x = True\ny = False\nz = False\n\nif not x or y:\n   print 1\nelif not x or not y and z:\n    print 2\nelif not x or y or not y and x:\n    print 3\nelse:\n  print 4",
        "choices":[
            "1",
            "2",
            "3",
            "4"
        ],
        "answer":3
    },
    {
        "id":5,
        "question": "print r'\\nwoow'",
        "choices":[
            "new line then the string: woow",
            "the text exactly like this: r'\\nwoow'",
            "the text like exactly like this: \\nwoow",
            "the letter r and then newine then the text: woow",
            "the letter r then the text like this: nwoow"
        ],
        "answer":1
    },
    {
        "id":6,
        "question": "f = None\n\nfor i in range(5):\n    with open('data.txt', 'w') as f:\n        if i > 2:\n        break\n\nprint f.closed",
        "choices":[
            "True",
            "False",
            "None"
        ],
        "answer":1
    },
    {
        "id":7,
        "question": "print \"hello\" 'world'",
        "choices":[
            "on one line the text: hello world",
            "on one line the text: helloworld",
            "hello on one line and world on the next line",
            "syntax error, this python program will not run"
        ],
        "answer":2
    },
    {
        "id":8,
        "question": "class parent:\n    def __init__(self, param):\n        self.v1 = param\n\nclass child(parent):\n    def __init__(self, param):\n        self.v2 = param\n\nobj = child(11)print \"%d %d\" % (obj.v1, obj.v2)",
        "choices":[
            "None None",
            "None 11",
            "11 None",
            "11 11",
            "Error is generated by program"
        ],
        "answer":5
    },
    {
        "id":9,
        "question": "class Account:\n    def __init__(self, id):\n        self.id = id\n        id = 666\n\nacc = Account(123)\nprint acc.id",
        "choices":[
            "None",
            "123",
            "666",
            "SyntaxError, this program will not run"
        ],
        "answer":2
    },
    {
        "id":10,
        "question": "name = 'snow storm\n\nprint '%s' % name[6:8]",
        "choices":[
            "st",
            "sto",
            "to",
            "tor",
            "Syntax Error"
        ],
        "answer":3
    },
    {
        "id":11,
        "question": "def simpleFunction():\n    \"This is a cool simple funtion that returns 1\"\n    return 1\n\nprint simpleFunction.__doc__[10:14]",
        "choices":[
            "simpleFunction",
            "simple",
            "func",
            "function",
            "cool"
        ],
        "answer":5
    },
    {
        "id":12,
        "question": "foo = {}\nprint type(foo)",
        "choices":[
            "set",
            "dict",
            "list",
            "tuple",
            "object"
        ],
        "answer":2
    },
    {
        "id":13,
        "question": "confusion = {}\nconfusion[1] = 1\nconfusion['1'] = 2\nconfusion[1] += 1\n\nsum = 0\nfor k in confusion:\n    sum += confusion[k]\n\nprint sum",
        "choices":[
            "1",
            "2",
            "3",
            "4",
            "5"
        ],
        "answer":4
    },
    {
        "id":14,
        "question": "names = ['Amir', 'Barry', 'Chales', 'Dao']\nprint names[-1][-1]",
        "choices":[
            "A",
            "r",
            "Amir",
            "Dao",
            "o"
        ],
        "answer":5
    },
    {
        "id":15,
        "question": "-Which of the following data structures can be used with the \"in\" operator to check if an item is in the data structure?",
        "choices":[
            "list",
            "set",
            "dictionary",
            "All of the above",
            "None of the above"
        ],
        "answer":4
    },
    {
        "id":16,
        "question": "a = 1\nb = 2\na,b = b,a\nprint '%d %d' % (a,b)",
        "choices":[
            "1 2",
            "2 1",
            "An exception is thrown",
            "This program has undefined behavior"
        ],
        "answer":2
    },
    {
        "id":17,
        "question": "def dostuff(param1, *param2):\n    print type(param2)\n\ndostuff('apples', 'bananas', 'cherry', 'dates')",
        "choices":[
            "str",
            "int",
            "tuple",
            "list",
            "dict"
        ],
        "answer":3
    },
    {
        "id":18,
        "question": "def a(b, c, d): pass",
        "choices":[
            "defines a list and initializes it",
            "defines a function, which does nothing",
            "defines a function, which passes its parameters through",
            "defines an empty class"
        ],
        "answer":2
    }
]